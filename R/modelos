# Importar paquetes -------------------------------------------------------
require(tidyverse)
require(RColorBrewer)
require(ggplot2)
require(ggtext)
require(cowplot)
require(viridis)
require(gt)

# Importar Base de Datos --------------------------------------------------
df <- jffs::seals
`%>%` <- dplyr::`%>%`

# Tablas de Datos ---------------------------------------------------------

## Isla
# Total individuos por isla, status completo
isla_total <- df %>%
  dplyr::group_by(year, isla) %>%
  dplyr::filter(status == "Completo") %>%
  dplyr::summarise(suma = sum(total, na.rm = TRUE))

# Funcion R ---------------------------------------------------------------

# Calculo Funcion R
r_func <- isla_total %>%
  arrange(isla, year) %>%
  group_by(isla) %>%
  mutate(R_v2 = growth_rate(suma))

growth_rate(isla_total, n = suma, time = year)

# Modelo ------------------------------------------------------------------

#### Robinson Crusoe ####

RC <- r_func %>% filter(isla == "Robinson Crusoe", !is.na(R))

# ajuste de parámetros
Nt <- RC$suma # definimos Nt a partir de la cantidad de humanos
t <- seq(1, length(Nt)) # definimos el parámetro t a partir de la cantidad de Years BP desde el presente

## Exponencial
expo_RC <- nls(R ~ r * t, data = RC, start = c(r = 0.1), trace = TRUE) 
summary(expo_RC)
aic_expo_RC <- AIC(expo_RC)

# calculo pseudo R2
r2_expo_RC <- cor(predict(expo_RC), RC$R) ^ 2

# calculo valores predichos
pd_expo_RC <- predict(expo_RC)

# grafico de valores observados vs predichos
# R vs N
ggplot(RC) + 
  geom_line(aes(x = suma, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = suma, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = suma, y = pd_expo_RC, colour = "predichos"), size = 1) +
  geom_point(aes(x = suma, y = pd_expo_RC, colour = "predichos"), size = 2) +
  xlab("N") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Exponencial", subtitle = "Robinson Crusoe") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#22A884FF", "#414487FF"))


# R vs t
ggplot(RC) + 
  geom_line(aes(x = year, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = year, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = year, y = pd_expo_RC, colour = "predichos"), size = 1) +
  geom_point(aes(x = year, y = pd_expo_RC, colour = "predichos"), size = 2) +
  xlab("Años") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Exponencial", subtitle = "Robinson Crusoe") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#22A884FF", "#414487FF"))

## Competencia
comp_RC <- nls(R ~ b * (1 - (suma/k)), data = RC, start = c(b = 0.1, k = 0.1), trace = TRUE)
summary(comp_RC)
aic_comp_RC <- AIC(comp_RC)

# calculo pseudo R2
r2_comp_RC <- cor(predict(comp_RC), RC$R) ^ 2 

# calculo valores predichos
pd_comp_RC <- predict(comp_RC)

# grafico de valores observados vs predichos
# R vs N
ggplot(RC) + 
  geom_line(aes(x = suma, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = suma, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = suma, y = pd_comp_RC, colour = "predichos"), size = 1) +
  geom_point(aes(x = suma, y = pd_comp_RC, colour = "predichos"), size = 2) +
  xlab("N") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Competencia", subtitle = "Robinson Crusoe") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#22A884FF", "#414487FF"))

# R vs t
ggplot(RC) + 
  geom_line(aes(x = year, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = year, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = year, y = pd_comp_RC, colour = "predichos"), size = 1) +
  geom_point(aes(x = year, y = pd_comp_RC, colour = "predichos"), size = 2) +
  xlab("Años") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Competencia", subtitle = "Robinson Crusoe") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#22A884FF", "#414487FF"))

## Cooperacion
coop_RC <- nls(R ~ b * (1 - (A/suma)), data = RC, start = c(b = 0.1, A = 0.1), trace = TRUE)
summary(coop_RC)
aic_coop_RC <- AIC(coop_RC)

# calculo pseudo R2
r2_coop_RC <- cor(predict(coop_RC), RC$R) ^ 2 

# calculo valores predichos
pd_coop_RC <- predict(coop_RC)

# grafico de valores observados vs predichos
# R vs N
ggplot(RC) + 
  geom_line(aes(x = suma, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = suma, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = suma, y = pd_coop_RC, colour = "predichos"), size = 1) +
  geom_point(aes(x = suma, y = pd_coop_RC, colour = "predichos"), size = 2) +
  xlab("N") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Cooperación", subtitle = "Robinson Crusoe") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#22A884FF", "#414487FF"))

# R vs t
ggplot(RC) + 
  geom_line(aes(x = year, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = year, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = year, y = pd_coop_RC, colour = "predichos"), size = 1) +
  geom_point(aes(x = year, y = pd_coop_RC, colour = "predichos"), size = 2) +
  xlab("Años") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Cooperación", subtitle = "Robinson Crusoe") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#22A884FF", "#414487FF"))


# tabla de estadistios de ajuste
tabla <- gt(tibble(Modelo = c("Exponencial", "Competencia", "Cooperacion"), AIC = c(aic_expo_RC, aic_comp_RC, aic_coop_RC), pseudo_R2 = c(r2_expo_RC, r2_comp_RC, r2_coop_RC))) %>%
  tab_header(
    title = md("**Estadísticos de los Modelos**"),
    subtitle = md("*Robinson Crusoe*")
  ) %>% 
  tab_options(column_labels.font.weight = "bold") %>% 
  opt_row_striping(row_striping = TRUE)

  par <- gt(tibble(parametros = c("Rmax", "k"), valores = comp_RC$m$getAllPars())) %>% 
  tab_header(
  title = md("**Modelo Cooperación-Competencia**"),
  subtitle = md("*Robinson Crusoe*")
) %>% 
    tab_options(column_labels.font.weight = "bold") %>% 
    opt_row_striping(row_striping = TRUE)
  

#### Alejandro Selkirk ####

AS <- r_func %>% filter(isla == "Alejandro Selkirk", !is.na(R))

# ajuste de parámetros
Nt <- AS$suma # definimos Nt a partir de la cantidad de humanos
t <- seq(1, length(Nt)) # definimos el parámetro t a partir de la cantidad de Years BP desde el presente

## Exponencial
expo_AS <- nls(R ~ r * t, data = AS, start = c(r = 0.1), trace = TRUE) 
summary(expo_AS)
aic_expo_AS <- AIC(expo_AS)

# calculo pseudo R2
r2_expo_AS <- cor(predict(expo_AS), AS$R) ^ 2

# calculo valores predichos
pd_expo_AS <- predict(expo_AS)

# grafico de valores observados vs predichos
# R vs N
ggplot(AS) + 
  geom_line(aes(x = suma, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = suma, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = suma, y = pd_expo_AS, colour = "predichos"), size = 1) +
  geom_point(aes(x = suma, y = pd_expo_AS, colour = "predichos"), size = 2) +
  xlab("N") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Exponencial", subtitle = "Alejandro Selkirk") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#FDE725FF", "#414487FF"))


# R vs t
ggplot(AS) + 
  geom_line(aes(x = year, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = year, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = year, y = pd_expo_AS, colour = "predichos"), size = 1) +
  geom_point(aes(x = year, y = pd_expo_AS, colour = "predichos"), size = 2) +
  xlab("Años") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Exponencial", subtitle = "Alejandro Selkirk") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#FDE725FF", "#414487FF"))

## Competencia
comp_AS <- nls(R ~ b * (1 - (suma/k)), data = AS, start = c(b = 0.1, k = 0.1), trace = TRUE)
summary(comp_AS)
aic_comp_AS <- AIC(comp_AS)

# calculo pseudo R2
r2_comp_AS <- cor(predict(comp_AS), AS$R) ^ 2 

# calculo valores predichos
pd_comp_AS <- predict(comp_AS)

# grafico de valores observados vs predichos
# R vs N
ggplot(AS) + 
  geom_line(aes(x = suma, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = suma, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = suma, y = pd_comp_AS, colour = "predichos"), size = 1) +
  geom_point(aes(x = suma, y = pd_comp_AS, colour = "predichos"), size = 2) +
  xlab("N") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Competencia", subtitle = "Alejandro Selkirk") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#FDE725FF", "#414487FF"))


# R vs t
ggplot(AS) + 
  geom_line(aes(x = year, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = year, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = year, y = pd_comp_AS, colour = "predichos"), size = 1) +
  geom_point(aes(x = year, y = pd_comp_AS, colour = "predichos"), size = 2) +
  xlab("Años") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Competencia", subtitle = "Alejandro Selkirk") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#FDE725FF", "#414487FF"))


## Cooperacion
coop_AS <- nls(R ~ b * (1 - (A/suma)), data = AS, start = c(b = 0.1, A = 0.1), trace = TRUE)
summary(coop_AS)
aic_coop_AS <- AIC(coop_AS)

# calculo pseudo R2
r2_coop_AS <- cor(predict(coop_AS), AS$R) ^ 2 

# calculo valores predichos
pd_coop_AS <- predict(coop_AS)

# grafico de valores observados vs predichos
ggplot(AS) + 
  geom_line(aes(x = suma, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = suma, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = suma, y = pd_coop_AS, colour = "predichos"), size = 1) +
  geom_point(aes(x = suma, y = pd_coop_AS, colour = "predichos"), size = 2) +
  xlab("N") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Cooperación", subtitle = "Alejandro Selkirk") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#FDE725FF", "#414487FF"))

# R vs t
ggplot(AS) + 
  geom_line(aes(x = year, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = year, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = year, y = pd_coop_AS, colour = "predichos"), size = 1) +
  geom_point(aes(x = year, y = pd_coop_AS, colour = "predichos"), size = 2) +
  xlab("Años") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Cooperación", subtitle = "Alejandro Selkirk") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#FDE725FF", "#414487FF"))


# tabla de estadistios de ajuste
tabla <- gt(tibble(Modelo = c("Exponencial", "Competencia", "Cooperacion"), AIC = c(aic_expo_AS, aic_comp_AS, aic_coop_AS), pseudo_R2 = c(r2_expo_AS, r2_comp_AS, r2_coop_AS))) %>%
  tab_header(
    title = md("**Estadísticos de los Modelos**"),
    subtitle = md("*Alejandro Selkirk*")
  ) %>% 
  tab_options(column_labels.font.weight = "bold") %>% 
  opt_row_striping(row_striping = TRUE)

par <- gt(tibble(parametros = c("Rmax", "k"), valores = comp_AS$m$getAllPars())) %>% 
  tab_header(
    title = md("**Modelo Cooperación-Competencia**"),
    subtitle = md("*Alejandro Selkirk*")
  ) %>% 
  tab_options(column_labels.font.weight = "bold") %>% 
  opt_row_striping(row_striping = TRUE)


#### Santa Clara ####

SC <- r_func %>% filter(isla == "Santa Clara", !is.na(R))

# ajuste de parámetros
Nt <- SC$suma # definimos Nt a partir de la cantidad de humanos
t <- seq(1, length(Nt)) # definimos el parámetro t a partir de la cantidad de Years BP desde el presente

## Exponencial
expo_SC <- nls(R ~ r * t, data = SC, start = c(r = 0.1), trace = TRUE) 
summary(expo_SC)
aic_expo_SC <- AIC(expo_SC)

# calculo pseudo R2
r2_expo_SC <- cor(predict(expo_SC), SC$R) ^ 2

# calculo valores predichos
pd_expo_SC <- predict(expo_SC)

# grafico de valores observados vs predichos
# R vs N
ggplot(SC) + 
  geom_line(aes(x = suma, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = suma, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = suma, y = pd_expo_SC, colour = "predichos"), size = 1) +
  geom_point(aes(x = suma, y = pd_expo_SC, colour = "predichos"), size = 2) +
  xlab("N") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Exponencial", subtitle = "Santa Clara") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#440154FF", "#414487FF"))

# R vs t
ggplot(SC) + 
  geom_line(aes(x = year, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = year, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = year, y = pd_expo_SC, colour = "predichos"), size = 1) +
  geom_point(aes(x = year, y = pd_expo_SC, colour = "predichos"), size = 2) +
  xlab("Años") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Exponencial", subtitle = "Santa Clara") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#440154FF", "#414487FF"))

## Competencia
comp_SC <- nls(R ~ b * (1 - (suma/k)), data = SC, start = c(b = 0.1, k = 0.1), trace = TRUE)
summary(comp_SC)
aic_comp_SC <- AIC(comp_SC)

# calculo pseudo R2
r2_comp_SC <- cor(predict(comp_SC), SC$R) ^ 2 

# calculo valores predichos
pd_comp_SC <- predict(comp_SC)

# grafico de valores observados vs predichos
# R vs N
ggplot(SC) + 
  geom_line(aes(x = suma, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = suma, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = suma, y = pd_comp_SC, colour = "predichos"), size = 1) +
  geom_point(aes(x = suma, y = pd_comp_SC, colour = "predichos"), size = 2) +
  xlab("N") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Competencia", subtitle = "Santa Clara") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#440154FF", "#414487FF"))


# R vs t
ggplot(SC) + 
  geom_line(aes(x = year, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = year, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = year, y = pd_comp_SC, colour = "predichos"), size = 1) +
  geom_point(aes(x = year, y = pd_comp_SC, colour = "predichos"), size = 2) +
  xlab("Años") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Competencia", subtitle = "Santa Clara") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#440154FF", "#414487FF"))


## Cooperacion
coop_SC <- nls(R ~ b * (1 - (A/suma)), data = SC, start = c(b = 0.1, A = 0.1), trace = TRUE)
summary(coop_SC)
aic_coop_SC <- AIC(coop_SC)

# calculo pseudo R2
r2_coop_SC <- cor(predict(coop_SC), SC$R) ^ 2 

# calculo valores predichos
pd_coop_SC <- predict(coop_SC)

# grafico de valores observados vs predichos
ggplot(SC) + 
  geom_line(aes(x = suma, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = suma, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = suma, y = pd_coop_SC, colour = "predichos"), size = 1) +
  geom_point(aes(x = suma, y = pd_coop_SC, colour = "predichos"), size = 2) +
  xlab("N") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Cooperación", subtitle = "Santa Clara") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#440154FF", "#414487FF"))

# R vs t
ggplot(SC) + 
  geom_line(aes(x = year, y = R, colour = "observados"), size = 1) +
  geom_point(aes(x = year, y = R, colour = "observados"), size = 2) +
  geom_line(aes(x = year, y = pd_coop_SC, colour = "predichos"), size = 1) +
  geom_point(aes(x = year, y = pd_coop_SC, colour = "predichos"), size = 2) +
  xlab("Años") + ylab("Tasa de Crecimiento") + labs(title = "Modelo Cooperación", subtitle = "Santa Clara") + 
  theme_half_open(12) +
  background_grid(minor = "xy") +
  theme(axis.title = element_text(size = 14), 
        axis.text = element_text(size = 14), 
        strip.background = element_blank(),
        strip.text = element_textbox(size = 16, color = "white", fill = "black", box.color = "black",
                                     halign = 0.5, linetype = 1, r = unit(5, "pt"), width = unit(1, "npc"), 
                                     padding = margin(2, 0, 1, 0), margin = margin(3, 3, 3, 3)), 
        plot.title = element_text(size = 20, vjust = 1.25, hjust = 0.5), 
        plot.subtitle = element_text(size = 14, vjust = 1.25, hjust = 0.5), 
        plot.caption = element_text(size = 14, vjust = 1.25, hjust = 1), 
        legend.position = "bottom", 
        legend.title = element_blank(), 
        legend.justification = "center",
        legend.text = element_text(size = 16, hjust = 0.5), 
        legend.direction = "horizontal") + 
  geom_hline(yintercept = 0, linetype = "dashed", colour = "darkgrey") + 
  scale_color_manual(values = c("#440154FF", "#414487FF"))


# tabla de estadistios de ajuste
tabla <- gt(tibble(Modelo = c("Exponencial", "Competencia", "Cooperacion"), AIC = c(aic_expo_SC, aic_comp_SC, aic_coop_SC), pseudo_R2 = c(r2_expo_SC, r2_comp_SC, r2_coop_SC))) %>%
  tab_header(
    title = md("**Estadísticos de los Modelos**"),
    subtitle = md("*Santa Clara*")
  ) %>% 
  tab_options(column_labels.font.weight = "bold") %>% 
  opt_row_striping(row_striping = TRUE)

par <- gt(tibble(parametros = c("Rmax", "k"), valores = comp_SC$m$getAllPars())) %>% 
  tab_header(
    title = md("**Modelo Cooperación-Competencia**"),
    subtitle = md("*Santa Clara*")
  ) %>% 
  tab_options(column_labels.font.weight = "bold") %>% 
  opt_row_striping(row_striping = TRUE)
